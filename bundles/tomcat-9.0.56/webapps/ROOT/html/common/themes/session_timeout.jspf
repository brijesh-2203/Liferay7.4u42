<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<%
String rememberMe = CookieKeys.getCookie(request, CookieKeys.REMEMBER_ME);
%>

<c:if test="<%= !themeDisplay.isSignedIn() || Validator.isNull(rememberMe) %>">
	<aui:script require="frontend-js-web/liferay/toast/commands/OpenToast.es as toastCommands">
		AUI().use(
			'liferay-session',
			function() {
				Liferay.Session = new Liferay.SessionBase(
					{
						autoExtend: <%= !themeDisplay.isSignedIn() || PropsValues.SESSION_TIMEOUT_AUTO_EXTEND %>,
						redirectOnExpire: <%= SSOUtil.isSessionRedirectOnExpire(themeDisplay.getCompanyId()) %>,
						redirectUrl: '<%= HtmlUtil.escapeJS(SSOUtil.getSessionExpirationRedirectURL(themeDisplay.getCompanyId(), themeDisplay.getURLHome())) %>',
						sessionLength: <%= PropsValues.SESSION_TIMEOUT * 60 %>,
						sessionTimeoutOffset: <%= PropsValues.SESSION_TIMEOUT_AUTO_EXTEND_OFFSET %>,
						warningLength: <%= PropsValues.SESSION_TIMEOUT_WARNING * 60 %>
					}
				);

				<c:if test="<%= themeDisplay.isSignedIn() && (PropsValues.SESSION_TIMEOUT_WARNING > 0) %>">
					Liferay.Session.plug(
						Liferay.SessionDisplay,
						{
							openToast: toastCommands.openToast,
						}
					);
				</c:if>
			}
		);
	</aui:script>
</c:if>